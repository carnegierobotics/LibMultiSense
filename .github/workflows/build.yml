name: Build LibMultiSense

on:
  push:
    branches:
      - master
  release:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # TODO: Remove this
      fail-fast: false

      matrix:
        os:
          #- macos-latest
          - ubuntu-latest
          - windows-latest
        build_type:
          #- Debug
          - Release
        c_compiler:
          - cl
          #- clang
          - gcc
        build_shared_libs:
          - ON
          #- OFF

        include:
          #- os: macos-latest
          #  c_compiler: gcc
          #  cpp_compiler: g++
          #- os: macos-latest
          #  c_compiler: clang
          #  cpp_compiler: clang++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          #- os: ubuntu-latest
          #  c_compiler: clang
          #  cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
        exclude:
          #- os: macos-latest
          #  c_compiler: cl
          - os: ubuntu-latest
            c_compiler: cl
          - os: windows-latest
            c_compiler: gcc
          #- os: windows-latest
          #  c_compiler: clang

    steps:
      - name: Checkout LibMultiSense
        uses: actions/checkout@v4

      - name: Install newer CMake
        uses: lukka/get-cmake@latest

      - name: Install GTest
        uses: LazyPanda07/get-gtest@v1.1
        with:
          branch-name: v1.15.2
          install-path: gtest

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
          echo 'run-tests=${{ matrix.os == 'ubuntu-latest' }}' >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        id: configure
        run: >
          cmake
          -S ${{ github.workspace }}
          -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DBUILD_SHARED_LIBS=${{ matrix.build_shared_libs }}
          -DCMAKE_INSTALL_PREFIX=install-${{ matrix.os }}-${{ matrix.c_compiler }}-${{ matrix.build_type }}-${{ matrix.build_shared_libs }}
          -DBUILD_TESTS=${{ steps.strings.outputs.run-tests }}
          -DGTest_DIR=${{ github.workspace }}/gtest/lib/cmake/GTest

      - name: Build
        id: build
        run: >
          cmake
          --build ${{ steps.strings.outputs.build-output-dir }}
          --config ${{ matrix.build_type }}
          -j $(nproc)

      - name: TEMPORARY - Run failing test manually
        id: test-timestamp
        if: ${{ steps.strings.outputs.run-tests }}
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          ./source/LibMultiSense/test/TestTimestamp

      - name: Test
        id: test
        if: ${{ steps.strings.outputs.run-tests }}
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: >
          ctest
          --build-config ${{ matrix.build_type }}
          --output-on-failure

      - name: Install
        id: install
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          cmake --install ${{ steps.strings.outputs.build-output-dir }}
